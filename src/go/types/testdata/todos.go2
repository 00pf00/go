// Copyright 2020 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// This file is meant as "dumping ground" for tests
// of not yet implemented features. It will grow and
// shrink over time.

package p

// Pointer designation for type parameters is currently ignored.
func _(type *P /* ERROR ignored */ )() {}

// Composite literals that require parentheses around their types.
// Should investigate if it makes sense to be smarter when parsing
// at the cost of more complex rules.
type T1(type P) struct{}
type T2(type P, Q) struct{}

func _() {
   _ = []T1 /* ERROR instantiation */ (int){} // this doesn't work
   _ = [](T1(int)){}                          // this works
   _ = [](T2(int, string)){}                  // T2(int, float) cannot be a conversion - should not need ()'s
}
