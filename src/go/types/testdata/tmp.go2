package p

type Pair(type K) struct {
	key K
}

type Receiver(type T) struct {
	values T
}

type Iterator(type K) struct {
	r Receiver(Pair(K))
}

func (r Receiver(T)) Values() T {
	return r.values
}

func Values (type T) (r Receiver(T)) T {
        return r.values
}

func (it Iterator(K)) Next() K {
	// x := it.r.Values()
        x := Values(Pair(K))(it.r)
        // it         : Iterator(K)
        // it.r       : Receiver(Pair(K))
        // it.r.Values: Pair(K)
	return x.key
}
