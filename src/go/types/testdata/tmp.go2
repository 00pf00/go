// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package p

/*
type I interface{
        m(type A)(A)
}
 
type S struct{}
 
func (S) m(type B)(B)
 
var _ I = S{}

type E(type T) interface {
        m(type B)(B)
}

type II interface{
        (E(int))
        mm() int
}

var _ I = II(nil)
*/

type T(type P) int

func (_ T(P)) m() int

func _() {
        // var x T(int)
        // _ = x.m()
}
